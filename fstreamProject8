#include <iostream>
#include <fstream>

using namespace std;

int main(){
		
		ifstream inFile1;
		ifstream inFile2;
		ofstream outFile1;
		int mClientNumber, fClientNumber;
		string mClientName, fClientName;
		bool atLeastOneFileNotAtEnd = true;
		bool inFile1Written = false;
		bool inFile2Written = false;
		
	cout << "File merge processing starting" << endl;
	inFile1.open("inFile1.txt");
	inFile2.open("inFile2.txt");
	
	if(inFile1.fail())
	{
		cout << "fail";
	}

	if(inFile2.fail())
	{
		cout << "fail";
	}


	outFile1.open("outFile1.txt");
	
	inFile1 >> mClientName, mClientNumber;
	inFile2 >> fClientName, fClientNumber;
	
	
	
	while(atLeastOneFileNotAtEnd == true)
	{
		if(!inFile1.eof())
		{
			if(inFile2Written == false)
			{
				outFile1 >> fClientNumber, fClientName;
				inFile2Written = true;
			}
			
		else if(!inFile2.eof())
		   
			if(inFile1Written == false)
			{
				outFile1 >> mClientNumber, mClientName;
				inFile1Written == true;
			}
		
		else if(mClientNumber < fClientNumber)
			{
				outFile1 >> mClientNumber, mClientName;
				inFile1Written == true;
			}
		
		else
		{
			outFile1 >> fClientNumber, fClientName;
			inFile2Written == true;
		}
						
		
	if((inFile1.eof()) && (inFile2Written == true))
	{
			inFile1 >> mClientNumber, mClientName;
			inFile1Written = false;
	}
	if((inFile2.eof()) && (inFile2Written == true))
	{
			inFile2 >> fClientNumber, fClientName;
			inFile2Written = false;
	}
	if((inFile1.eof()) && (inFile2.eof()))
	{
			atLeastOneFileNotAtEnd = false;
	}
		
		
		}
			
	inFile1.close();
	inFile2.close();
	outFile1.close();
	cout << "Merging Complete" << endl;
	
	return 0;
	 
	}	
	
	
		

}







